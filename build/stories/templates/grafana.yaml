apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.grafana.label }}-creds
  namespace: {{ .Values.namespace }}
type: Opaque
stringData:
  GF_SECURITY_ADMIN_USER: {{ .Values.grafana.adminUser }}
  GF_SECURITY_ADMIN_PASSWORD: {{ .Values.grafana.adminUserPassword }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.grafana.label }}
  name: {{ .Values.grafana.label }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.grafana.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.grafana.label }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.grafana.label }}
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: {{ .Values.grafana.label }}-creds
          image: {{ .Values.grafana.image }}
          imagePullPolicy: IfNotPresent
          name: grafana
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.grafana.label }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.grafana.label }}
  ports:
    - protocol: TCP
      port: {{ .Values.grafana.port }}
      targetPort: {{ .Values.grafana.targetPort }}
  type: {{ .Values.grafana.serviceType }}